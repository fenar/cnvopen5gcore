apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: open5gswebui-gateway
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: open5gswebui-ingress
spec:
  hosts:
  - "*"
  gateways:
  - open5gswebui-gateway
  http:
  - route:
    - destination:
        host: open5gs-webui
        port:
          number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: open5gs-webui
  labels:
    epc-mode: webui
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
  selector:
    epc-mode: webui
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: open5gs-webui-d
  labels:
    epc-mode: webui
spec:
  #replicas: 1
  selector:
    matchLabels:
      epc-mode: webui
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        epc-mode: webui
    spec:    
      containers:
      - name: webui
        imagePullPolicy: {{ .Values.webui.image.pullPolicy }}
        image: "{{ .Values.webui.image.repository }}:{{ .Values.webui.image.tag }}"      
        env:
        - name: DB_URI
          value: mongodb://mongodb-svc/open5gs
        - name: NODE_ENV
          value: "production"  
        - name: HOSTNAME
          value: '0.0.0.0'               
